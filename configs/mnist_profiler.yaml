core:
  data:
    test:
      module: torch.utils.data
      class: DataLoader
      kwargs:
        dataset:
          module: torchvision.datasets
          class: MNIST
          kwargs:
            root: '''dataset/MNIST/'''
            train: False
            download: True
            transform: transforms.Compose([transforms.ToTensor(), transforms.Normalize((0.1307,), (0.3081,))])
        batch_size: 128
        shuffle: False

  model:
    module: flame.core.model.net
    class: Net

  engine:
    module: flame.core.engine.engine
    class: Evaluator
    kwargs:
      model: core.model
      data: core.data.test
      device: '''cuda'''

handlers:
  logging:
    progress_bar:
      module: ignite.contrib.handlers
      class: ProgressBar
      kwargs:
        persist: True

  profiler:
    module: flame.handlers.profiler
    class: profile
    kwargs:
      wait: 1
      warmup: 1
      active: 3
      repeat: 2
      on_trace_ready:
        module: torch.profiler
        class: tensorboard_trace_handler
        kwargs:
          dir_name: '''runs/MNIST'''
      record_shapes: True
      with_stack: True

setup:
  logging:
    progress_bar:
      - engine: core.engine
        handler: handlers.logging.progress_bar.attach
        event: Events.STARTED
        handler_kwargs:
          engine: core.engine

  profiler:
    engine: core.engine
    handler: handlers.profiler.attach
    event: Events.STARTED

extralibs:
  transforms: torchvision.transforms
  Events:
    module: ignite.engine
    name: Events
