model:
  module: torch.nn
  name: Linear
  kwargs:
    in_features: 1
    out_features: 1

engine:
  module: flame.engine
  name: Engine
  kwargs:
    data:
      - - torch.tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
        - torch.tensor([0, 1, 0, 1, 0, 1, 0, 1, 1, 1])
    model: null
    process_function: 'lambda e, b: (b[0] % 2, b[1])'
    max_epochs: 1

metrics:
  module: flame.handlers
  name: Metrics
  kwargs:
    evaluators:
      - engine
    metrics:
      accuracy:
        module: ignite.metrics
        name: Accuracy
      precision:
        module: ignite.metrics
        name: Precision

best_checkpoint:
  module: flame.handlers
  name: BestCheckpoint
  kwargs:
    engine: engine
    event: Events.EPOCH_COMPLETED
    modules:
      - "'model'"
    dirname: tempfile.mkdtemp()
    score_name: "'accuracy'"
    mode: "'max'"
    global_step_transform: global_step_from_engine(engine, Events.EPOCH_COMPLETED)

backup_checkpoint:
  module: flame.handlers
  name: BackupCheckpoint
  kwargs:
    engine: engine
    event: Events.EPOCH_COMPLETED
    modules:
      - "'model'"
      - "'engine'"
      - "'best_checkpoint'"
    dirname: tempfile.mkdtemp()
    global_step_transform: global_step_from_engine(engine, Events.EPOCH_COMPLETED)

config_backup:
  module: flame.handlers
  name: ConfigBackup
  kwargs:
    backup_checkpoint: backup_checkpoint

extralibs:
  torch: torch
  tempfile: tempfile
  Events:
    module: ignite.engine
    name: Events
  global_step_from_engine:
    module: ignite.handlers
    name: global_step_from_engine
